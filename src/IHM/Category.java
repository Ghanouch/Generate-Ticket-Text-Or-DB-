/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package IHM;

import DAOperations.DAO;
import Generate_Random.Generate;
import BuildTicketText.StructProductTicket;
import BuildTicketText.TicketOperations;
import UserToDb.to_db;
import java.awt.BorderLayout;
import java.awt.Dimension;
import java.awt.ScrollPane;
import java.awt.Toolkit;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.LinkedList;
import java.util.Map;
import javax.swing.DefaultComboBoxModel;
import javax.swing.DefaultListModel;
import javax.swing.JComboBox;
import javax.swing.JFrame;
import javax.swing.JList;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JScrollBar;
import javax.swing.JScrollPane;
import javax.swing.JTextArea;
import javax.swing.ScrollPaneConstants;
import java.awt.Graphics;
import java.awt.Image;
import java.awt.Toolkit;
import java.lang.reflect.Method;
import javax.swing.JFrame;
import javax.swing.JPanel;

/**
 *
 * @author l.IsSaM.l
 */
public class Category extends javax.swing.JFrame {

    public void init() throws Exception {
        MapOfCombo = new HashMap<Integer, JComboBox>();
        MapOfList = new HashMap<Integer, JList>();

        to_db.connect();
        this.pack();
        this.setPreferredSize(new Dimension(345, 1000));

        this.setTitle(" Generate ");

    }

    /**
     * Creates new form Category
     */
    public Category() throws Exception {
        init();

        listOfCategories = DAO.AllCategorie();
        initComponents();
    }

    public Category(String salername, String storename, String dateOfticket) throws Exception {
        this.salerName = salername;
        this.storeName = storename;
        this.dateTicket = dateOfticket;

        // dateTicket = Generate_Random.Generate.getTooManyDateFormatDateTooSql(1, 2015, 2016).get(0);
        init();

        listOfCategories = DAO.AllCategorie();
        initComponents();
    }

    public Map<String, ArrayList<StructProductTicket>> getMap() {

        Map<String, ArrayList<StructProductTicket>> mapOfProduct = new HashMap<String, ArrayList<StructProductTicket>>();
        String nomCategorie = "";
        JComboBox Jc = new JComboBox();
        ArrayList<StructProductTicket> li = new ArrayList<StructProductTicket>();
        int compteur = 0;
        for (Map.Entry<Integer, JComboBox> entry : MapOfCombo.entrySet()) {
            Jc = entry.getValue();
            nomCategorie = Jc.getSelectedItem().toString();
            //  System.out.println("__________ CLE  " + nomCategorie);

            Object[] item = MapOfList.get(compteur).getSelectedValues();

            try {
                for (int i = 0; i < item.length; i++) {
                    String nameProduct = (String) item[i];
                    StructProductTicket P = DAO.getProductStructByName(nameProduct);
                    P.qte = Math.random() > 0.80 ? Generate.Between(2, 10) : 1;
                    P.promotion = Math.random() < 0.85 ? false : true;
                    //  System.out.println("Produit :"+P );
                    li.add(P);
                }
            } catch (Exception e) {
                e.printStackTrace();
            }

            mapOfProduct.put(nomCategorie, li);
            compteur++;
            li = new ArrayList<StructProductTicket>();
        }

        return mapOfProduct;
    }

    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The content of this method is always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel3 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setIconImages(null);
        addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                formKeyTyped(evt);
            }
        });
        getContentPane().setLayout(new java.awt.FlowLayout());

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/IHM/button-generate.png"))); // NOI18N
        jLabel3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel3MouseClicked(evt);
            }
        });
        getContentPane().add(jLabel3);

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/IHM/ADD bleu.jpg"))); // NOI18N
        jLabel1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel1MouseClicked(evt);
            }
        });
        getContentPane().add(jLabel1);
        getContentPane().add(jLabel4);

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jLabel1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel1MouseClicked
        // TODO add your handling code here:
        JComboBox J = new JComboBox();
        JList jlist = new JList();
        if (i > 0) {
            listOfCategories.remove(MapOfCombo.get(i - 1).getSelectedItem().toString());
        }

        J.setModel(new DefaultComboBoxModel(listOfCategories.toArray()));
        try {
            jlist.setListData(DAO.getProdByCatName(J.getSelectedItem().toString(), 50).toArray());
        } catch (Exception e) {
            e.printStackTrace();
        }
        J.setName(new Integer(i).toString());
        MapOfCombo.put(i++, J);
        MapOfList.put(j++, jlist);

        scroll = new JScrollPane();
        scroll.setViewportView(jlist);

        J.addActionListener(new ActionListener() {

            @Override
            public void actionPerformed(ActionEvent e) {
                //To change body of generated methods, choose Tools | Templates.
                //       System.out.println( J.getSelectedItem().toString());
                int indiceCombo = Integer.parseInt(((JComboBox) e.getSource()).getName());
                System.out.println(indiceCombo);
                for (int i = 0; i < MapOfList.get(indiceCombo).getModel().getSize(); i++) {
                    Object item = MapOfList.get(indiceCombo).getModel().getElementAt(i);
                    DefaultListModel shopping = new DefaultListModel();
                    MapOfList.get(indiceCombo).setModel(shopping);
                    shopping.clear();
                    Object[] vector = DAO.getProdByCatName(((JComboBox) e.getSource()).getSelectedItem().toString(), 10).toArray();
                    MapOfList.get(indiceCombo).setListData(vector);
                    //System.out.println("Item = " + item);

                }

            }
        });

        add(J);
        add(scroll);

        this.validate();
        this.repaint();

    }//GEN-LAST:event_jLabel1MouseClicked

    public void add_() {
        JComboBox J = new JComboBox();
        JList jlist = new JList();
        if (i > 0) {
            listOfCategories.remove(MapOfCombo.get(i - 1).getSelectedItem().toString());
        }

        J.setModel(new DefaultComboBoxModel(listOfCategories.toArray()));
        try {
            jlist.setListData(DAO.getProdByCatName(J.getSelectedItem().toString(), 50).toArray());
        } catch (Exception e) {
            e.printStackTrace();
        }
        J.setName(new Integer(i).toString());
        MapOfCombo.put(i++, J);
        MapOfList.put(j++, jlist);

        scroll = new JScrollPane();
        scroll.setViewportView(jlist);

        J.addActionListener(new ActionListener() {

            @Override
            public void actionPerformed(ActionEvent e) {
                //To change body of generated methods, choose Tools | Templates.
                //       System.out.println( J.getSelectedItem().toString());
                int indiceCombo = Integer.parseInt(((JComboBox) e.getSource()).getName());
                //  System.out.println(indiceCombo);
                for (int i = 0; i < MapOfList.get(indiceCombo).getModel().getSize(); i++) {
                    Object item = MapOfList.get(indiceCombo).getModel().getElementAt(i);
                    DefaultListModel shopping = new DefaultListModel();
                    MapOfList.get(indiceCombo).setModel(shopping);
                    shopping.clear();
                    Object[] vector = DAO.getProdByCatName(((JComboBox) e.getSource()).getSelectedItem().toString(), 10).toArray();
                    MapOfList.get(indiceCombo).setListData(vector);
                    //  System.out.println("Item = " + item);

                }

            }
        });

        add(J);
        add(scroll);

        this.validate();
        this.repaint();
    }
    private void formKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_formKeyTyped
        if (evt.getKeyChar() == '+') {
            add_();
        }

        // TODO add your handling code here:
    }//GEN-LAST:event_formKeyTyped

    private void jLabel3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel3MouseClicked
        try {
            JFrame frame_1 = new JFrame();
            Object result = JOptionPane.showInputDialog(frame_1, "How much Tickets you wish generate ? ");

            int nbre_Ticket = Integer.parseInt(result.toString());

            String allTickets = " ";
            Method method ;
            while (nbre_Ticket-- > 0) {
                method = TicketOperations.class.getMethod("buildTicket_"+salerName,Boolean.class,Boolean.class,String.class,String.class,String.class,Map.class);
               String Ticket = method.invoke(null, true, true, salerName, storeName, dateTicket, getMap()).toString();          
               
//  String Ticket = TicketOperations.buildTicket_Marjane(true, true, salerName, storeName, dateTicket, getMap());
         //   TicketOperations.createFile(salerName + " " +nbre_Ticket, Ticket);
                //   DAO.InserIntoOCR(Ticket);

                allTickets += Ticket + " \n       ___________________________________________  \n";
    //    Service.Service.showMap(getMap());
                //    getMap();

            }
            
           
            JTextArea textArea = new JTextArea(allTickets);
            JScrollPane scrollPane = new JScrollPane(textArea);
            textArea.setLineWrap(true);
            textArea.setWrapStyleWord(true);
            scrollPane.setPreferredSize(new Dimension(500, 500));

            JOptionPane.showMessageDialog(null, scrollPane, " All your tickets ",
                    JOptionPane.INFORMATION_MESSAGE);
        }  
       catch (Exception e) {
            e.printStackTrace();
        }

// TODO add your handling code here:
    }//GEN-LAST:event_jLabel3MouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Category.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Category.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Category.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Category.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {

                    new Category().setVisible(true);

                } catch (Exception e) {
                    e.printStackTrace();
                }
            }
        });
    }

    Map<Integer, JComboBox> MapOfCombo;
    Map<Integer, JList> MapOfList;
    int i = 0, j = 0;
    LinkedList<String> listOfCategories;
    JScrollPane scroll;
    public String salerName;
    public String storeName;
    public String dateTicket;

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    // End of variables declaration//GEN-END:variables
}
